{"version":3,"sources":["./src/app/modules/app-products/components/product-operation-modal/product-operation-modal.component.css","./src/app/modules/app-products/components/product-operation-modal/product-operation-modal.component.html","./src/app/modules/app-products/components/product-operation-modal/product-operation-modal.component.ts","./src/app/modules/app-products/components/product-type-modal/product-type-modal.component.css","./src/app/modules/app-products/components/product-type-modal/product-type-modal.component.html","./src/app/modules/app-products/components/product-type-modal/product-type-modal.component.ts","./src/app/modules/app-products/components/products-page/products-page.component.css","./src/app/modules/app-products/components/products-page/products-page.component.html","./src/app/modules/app-products/components/products-page/products-page.component.ts","./src/app/modules/app-products/enums/product-operation-type.enum.ts","./src/app/modules/app-products/products-routing.module.ts","./src/app/modules/app-products/products.module.ts","./src/app/modules/app-products/services/products-urls.service.ts","./src/app/modules/app-products/services/products.service.ts"],"names":[],"mappings":"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","file":"products.module.chunk.js","sourcesContent":["module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/app-products/components/product-operation-modal/product-operation-modal.component.css\n// module id = ./src/app/modules/app-products/components/product-operation-modal/product-operation-modal.component.css\n// module chunks = products.module","module.exports = \"<form [formGroup]=\\\"form\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"operation-type\\\">Тип операции:</label>\\n    <select class=\\\"form-control\\\" id=\\\"operation-type\\\" formControlName=\\\"operationType\\\">\\n      <option value=\\\"MANUFACTURED\\\">Производство</option>\\n      <option value=\\\"SOLD\\\">Реализация</option>\\n    </select>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"product-amount\\\">Количество продуктов:</label>\\n    <input type=\\\"number\\\" min=\\\"0\\\" step=\\\"1\\\" class=\\\"form-control\\\" id=\\\"product-amount\\\" formControlName=\\\"amount\\\" [ngClass]=\\\"{\\n        'is-invalid': form.get('amount').invalid && isTouched('amount'),\\n        'is-valid': form.get('amount').valid && isTouched('amount')\\n      }\\\">\\n    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.get('amount').invalid && isTouched('amount')\\\">\\n      <span *ngIf=\\\"form.get('amount').errors['required']\\\">\\n        Обязательное поле!\\n      </span>\\n      <span *ngIf=\\\"form.get('amount').errors['min']\\\">\\n        Минимальное количество продукции для операции: {{ MIN_PRODUCT_AMOUNT }}\\n      </span>\\n      <span *ngIf=\\\"form.get('amount').errors['decimalPlacesError']\\\">\\n        Максимальное количество знаков после запятой: {{ DECIMAL_PLACES }}\\n      </span>\\n    </div>\\n  </div>\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/app-products/components/product-operation-modal/product-operation-modal.component.html\n// module id = ./src/app/modules/app-products/components/product-operation-modal/product-operation-modal.component.html\n// module chunks = products.module","import {\n  Component,\n  OnInit,\n  ComponentRef\n} from '@angular/core';\nimport {\n  IModalDialog,\n  IModalDialogOptions,\n  IModalDialogButton\n} from 'ngx-modal-dialog';\nimport {\n  FormGroup,\n  FormControl,\n  Validators\n} from '@angular/forms';\nimport {\n  Decimal\n} from 'decimal.js'\n\nimport {\n  ProductOperationType\n} from '../../enums/product-operation-type.enum';\nimport {\n  integerValidator\n} from '../../../../app-utils/app-validators';\n\n@Component({\n  selector: 'app-product-operation-modal',\n  templateUrl: './product-operation-modal.component.html',\n  styleUrls: ['./product-operation-modal.component.css']\n})\nexport class ProductOperationModalComponent implements OnInit, IModalDialog {\n\n  actionButtons: IModalDialogButton[];\n  options: Partial < IModalDialogOptions < ProductOperationModalData >> ;\n  form: FormGroup;\n  productOperation: ProductOperationRequest;\n  operationType: ProductOperationType;\n\n  readonly MIN_PRODUCT_AMOUNT = 0.001;\n  readonly DECIMAL_PLACES = 3;\n\n  private btnClass = 'btn btn-outline-dark';\n  submitPressed = false;\n\n  constructor() {\n    this.actionButtons = [{\n        text: 'Отмена',\n        buttonClass: this.btnClass,\n        onAction: () => true\n      },\n      {\n        text: 'Произвести операцию',\n        buttonClass: this.btnClass,\n        onAction: this.onSubmit.bind(this)\n      }\n    ];\n  }\n\n  ngOnInit() {\n\n  }\n\n  dialogInit(reference: ComponentRef < IModalDialog > , options: Partial < IModalDialogOptions < ProductOperationModalData >> ) {\n    this.options = options;\n    this.productOperation = options.data.productOperationRequest;\n    this.operationType = ProductOperationType[this.productOperation.operationType];\n    this.form = new FormGroup({\n      operationType: new FormControl({\n        value: this.operationType,\n        disabled: true\n      }),\n      amount: new FormControl(undefined, [Validators.required, Validators.min(this.MIN_PRODUCT_AMOUNT), this.validateDecimalPlaces.bind(this)])\n    });\n  }\n\n  onSubmit(): Promise < ProductOperationRequest > {\n    if (this.form.invalid) {\n      this.submitPressed = true;\n      const reject = Promise.reject('invalid');\n      this.options.data.func(reject);\n      return reject;\n    }\n\n    const productOperation: ProductOperationRequest = {\n      operationDate: this.productOperation.operationDate,\n      productTypeId: this.productOperation.productTypeId,\n      operationType: this.operationType,\n      amount: new Decimal(this.form.value.amount).times(Math.pow(10, this.DECIMAL_PLACES)).toNumber()\n    }\n    const resolve = Promise.resolve(productOperation);\n    this.options.data.func(resolve);\n    return resolve;\n  }\n\n  isTouched(controlName: string) {\n    return this.form.get(controlName).touched || this.submitPressed;\n  }\n\n  validateDecimalPlaces(control: FormControl) {\n    if (control.value && !new Decimal(control.value).times(Math.pow(10, this.DECIMAL_PLACES)).isInteger()) {\n      return {\n        'decimalPlacesError': true\n      };\n    }\n    return null;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/app-products/components/product-operation-modal/product-operation-modal.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/app-products/components/product-type-modal/product-type-modal.component.css\n// module id = ./src/app/modules/app-products/components/product-type-modal/product-type-modal.component.css\n// module chunks = products.module","module.exports = \"<form [formGroup]=\\\"form\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <label for=\\\"roll-name\\\" class=\\\"col-form-label\\\">Наименование:</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"roll-name\\\" formControlName=\\\"name\\\" [ngClass]=\\\"{\\n            'is-invalid': form.get('name').invalid && isTouched('name'),\\n            'is-valid': form.get('name').valid && isTouched('name')\\n          }\\\">\\n      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.get('name').invalid && isTouched('name')\\\">\\n        <span *ngIf=\\\"form.get('name').errors['required']\\\">Обязательное поле!</span>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <label for=\\\"product-weight\\\" class=\\\"col-form-label\\\">Вес:</label>\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"product-weight\\\" [step]=\\\"MIN_WEIGHT\\\" formControlName=\\\"weight\\\" [min]=\\\"MIN_WEIGHT\\\" [ngClass]=\\\"{\\n          'is-invalid': form.get('weight').invalid && isTouched('weight'),\\n          'is-valid': form.get('weight').valid && isTouched('weight')\\n        }\\\">\\n      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"form.get('weight').invalid && isTouched('weight')\\\">\\n        <span *ngIf=\\\"form.get('weight').errors['required']\\\">Обязательное поле!</span>\\n        <span *ngIf=\\\"form.get('weight').errors['min']\\\">Вес должен быть больше {{ MIN_WEIGHT }}</span>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-2\\\">\\n      <label for=\\\"product-color\\\" class=\\\"col-form-label\\\">Цвет:</label>\\n      <input type=\\\"button\\\" class=\\\"form-control\\\" id=\\\"product-color\\\" formControlName=\\\"colorCode\\\" [(colorPicker)]=\\\"colorCode\\\" [value]=\\\"colorCode\\\"\\n        [style.background]=\\\"colorCode\\\" [style.color]=\\\"colorCode\\\" [cpOutputFormat]=\\\"'hex'\\\" [cpPosition]=\\\"'left'\\\" [cpOKButton]=\\\"true\\\"\\n        [cpCancelButton]=\\\"true\\\" [cpPresetColors]=\\\"presetColors\\\">\\n    </div>\\n  </div>\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/app-products/components/product-type-modal/product-type-modal.component.html\n// module id = ./src/app/modules/app-products/components/product-type-modal/product-type-modal.component.html\n// module chunks = products.module","import {\n  Component,\n  OnInit,\n  ComponentRef\n} from '@angular/core';\nimport {\n  IModalDialog,\n  IModalDialogOptions,\n  IModalDialogButton\n} from 'ngx-modal-dialog';\nimport {\n  FormGroup,\n  FormControl,\n  Validators\n} from '@angular/forms';\nimport appPresetColors from '../../../../app-utils/app-preset-colors';\n\n@Component({\n  selector: 'app-product-type-modal',\n  templateUrl: './product-type-modal.component.html',\n  styleUrls: ['./product-type-modal.component.css']\n})\nexport class ProductTypeModalComponent implements OnInit, IModalDialog {\n\n  actionButtons: IModalDialogButton[];\n  options: Partial < IModalDialogOptions < ProductTypeModalData >> ;\n\n  form: FormGroup;\n  submitPressed = false;\n  presetColors = appPresetColors;\n  productType: ProductTypeRequest;\n  colorCode: string;\n  private btnClass = 'btn btn-outline-dark';\n\n  readonly MIN_WEIGHT = 0.1;\n\n  constructor() {\n    this.actionButtons = [{\n        text: 'Отмена',\n        buttonClass: this.btnClass,\n        onAction: () => true\n      },\n      {\n        text: 'Сохранить',\n        buttonClass: this.btnClass,\n        onAction: this.onSubmit.bind(this)\n      }\n    ];\n  }\n\n  ngOnInit() {\n    this.colorCode = this.productType ? this.productType.colorCode : appPresetColors[0];\n\n    this.form = new FormGroup({\n      name: new FormControl(this.productType ? this.productType.name : undefined, [Validators.required]),\n      weight: new FormControl(this.productType ? this.productType.weight : undefined, [Validators.required, Validators.min(this.MIN_WEIGHT)]),\n      colorCode: new FormControl(this.colorCode)\n    });\n  }\n\n  dialogInit(reference: ComponentRef < IModalDialog > , options: Partial < IModalDialogOptions < ProductTypeModalData >> ) {\n    this.options = options;\n    this.productType = options.data.productType;\n  }\n\n  onSubmit() {\n    if (this.form.invalid) {\n      this.submitPressed = true;\n      const reject = Promise.reject('invalid');\n      this.options.data.operation(reject);\n      return reject;\n    }\n\n    const type: ProductTypeRequest = {\n      name: this.form.value.name,\n      weight: this.form.value.weight,\n      colorCode: this.colorCode\n    };\n    const resolve = Promise.resolve(type);\n    this.options.data.operation(resolve);\n    return resolve;\n  }\n\n  isTouched(controlName: string) {\n    return this.form.get(controlName).touched || this.submitPressed;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/app-products/components/product-type-modal/product-type-modal.component.ts","module.exports = \"td {\\n    width: 12%;\\n}\\n\\n.empty-row, .empty-row:hover {\\n    height: 1%;\\n    background-color: white;\\n    border: none;\\n}\\n\\n::ng-deep .dropdown-item {\\n    font-size: 0.9rem;\\n    padding: .1rem 1rem;\\n  }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/app-products/components/products-page/products-page.component.css\n// module id = ./src/app/modules/app-products/components/products-page/products-page.component.css\n// module chunks = products.module","module.exports = \"<div class=\\\"container-fluid mt-2\\\">\\n  <button class=\\\"btn btn-outline-dark btn-sm\\\" (click)=\\\"openAddProductTypeModal()\\\">\\n    <span class=\\\"material-icons\\\">add</span>\\n  </button>\\n  <div class=\\\"table-responsive mt-2\\\">\\n    <table class=\\\"table table-bordered table-striped table-sm\\\">\\n      <thead>\\n        <tr class=\\\"table-header\\\">\\n          <th scope=\\\"col\\\" rowspan=\\\"2\\\" class=\\\"align-middle\\\">Наименование</th>\\n          <th scope=\\\"col\\\" rowspan=\\\"2\\\" class=\\\"align-middle\\\">Вес</th>\\n          <th scope=\\\"col\\\" rowspan=\\\"2\\\" class=\\\"align-middle\\\">Цвет</th>\\n          <th scope=\\\"col\\\" rowspan=\\\"2\\\" class=\\\"align-middle\\\">Остаток на начало месяца, тыс.шт.</th>\\n          <th scope=\\\"col\\\" rowspan=\\\"1\\\" colspan=\\\"2\\\">Произведено тыс.шт.</th>\\n          <th scope=\\\"col\\\" rowspan=\\\"1\\\" colspan=\\\"2\\\">Реализация тыс.шт.</th>\\n          <th scope=\\\"col\\\" rowspan=\\\"2\\\" class=\\\"align-middle\\\">Текущий период, тыс.шт.</th>\\n        </tr>\\n        <tr class=\\\"table-header\\\">\\n          <th scope=\\\"col\\\">за сутки</th>\\n          <th scope=\\\"col\\\">за месяц</th>\\n          <th scope=\\\"col\\\">за сутки</th>\\n          <th scope=\\\"col\\\">за месяц</th>\\n        </tr>\\n      </thead>\\n      <tbody *ngFor=\\\"let infoArray of productsInfo\\\">\\n        <tr *ngFor=\\\"let productInfo of sortByNameAndWeight(infoArray)\\\" [contextMenu]=\\\"productsMenu\\\" [contextMenuSubject]=\\\"productInfo.type\\\">\\n          <th scope=\\\"row\\\" class=\\\"row-name\\\">\\n            {{ productInfo.type.name }}\\n          </th>\\n          <th scope=\\\"row\\\" class=\\\"row-name\\\">\\n            {{ productInfo.type.weight }}\\n          </th>\\n          <th scope=\\\"row\\\" class=\\\"row-name\\\">\\n            <span class=\\\"filled-circle\\\" [ngStyle]=\\\"{ 'background-color': productInfo.type.colorCode }\\\"></span>\\n          </th>\\n          <td>\\n            {{ (productInfo.restLeftover.amount) | exponent }}\\n          </td>\\n          <td (click)=\\\"openAddProductOperation(productInfo.type.id, 'MANUFACTURED')\\\">\\n            {{ productInfo.dayBatch.manufacturedAmount | empty | exponent }}\\n          </td>\\n          <td>\\n            {{ productInfo.monthBatch.manufacturedAmount | empty | exponent }}\\n          </td>\\n          <td (click)=\\\"openAddProductOperation(productInfo.type.id, 'SOLD')\\\">\\n            {{ productInfo.dayBatch.soldAmount | empty | exponent }}\\n          </td>\\n          <td>\\n            {{ productInfo.monthBatch.soldAmount | empty | exponent }}\\n          </td>\\n          <td>\\n            {{ productInfo.currentLeftover.amount | exponent }}\\n          </td>\\n        </tr>\\n        <tr>\\n          <th scope=\\\"row\\\" class=\\\"row-name\\\" colspan=\\\"3\\\">Итого</th>\\n          <td *ngFor=\\\"let total of getSectionTotals(infoArray)\\\">\\n            {{ total | exponent }}\\n          </td>\\n        </tr>\\n        <td class=\\\"empty-row\\\"></td>\\n      </tbody>\\n      <tbody *ngIf=\\\"productsInfo.length != 0\\\">\\n        <tr>\\n          <th scope=\\\"row\\\" class=\\\"row-name\\\" colspan=\\\"3\\\">Всего</th>\\n          <td *ngFor=\\\"let total of getTotals()\\\">\\n            {{ total | exponent }}\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\\n<context-menu #productsMenu>\\n  <ng-template contextMenuItem let-item (execute)=\\\"openEditProductTypeModal($event.item)\\\">\\n    Редактировать продукцию\\n  </ng-template>\\n  <ng-template contextMenuItem divider=\\\"true\\\"></ng-template>\\n  <ng-template contextMenuItem let-item (execute)=\\\"openDeleteProductTypeModal($event.item)\\\">\\n    Удалить продукцию\\n  </ng-template>\\n</context-menu>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/app-products/components/products-page/products-page.component.html\n// module id = ./src/app/modules/app-products/components/products-page/products-page.component.html\n// module chunks = products.module","import {\n  Component,\n  OnInit,\n  ViewContainerRef\n} from '@angular/core';\nimport {\n  ModalDialogService,\n  IModalDialogOptions\n} from 'ngx-modal-dialog';\n\nimport {\n  ProductsService\n} from '../../services/products.service';\nimport {\n  getDateFirstDayOfMonth,\n  midnightDate,\n  formatDate\n} from '../../../../app-utils/app-date-utils';\nimport {\n  AppModalService\n} from '../../../app-shared/services/app-modal.service';\nimport {\n  ProductTypeModalComponent\n} from '../product-type-modal/product-type-modal.component';\nimport {\n  SimpleConfirmModalComponent\n} from '../../../app-shared/components/simple-confirm-modal/simple-confirm-modal.component';\nimport {\n  ProductOperationModalComponent\n} from '../product-operation-modal/product-operation-modal.component';\n\n@Component({\n  selector: 'app-products-page',\n  templateUrl: './products-page.component.html',\n  styleUrls: ['./products-page.component.css']\n})\nexport class ProductsPageComponent implements OnInit {\n\n  productsInfo: ProductInfo[][] = [];\n  daylyDate: Date;\n  toDate: Date;\n  fromDate: Date;\n\n  private readonly COLLATOR = new Intl.Collator([], {\n    sensitivity: \"base\"\n  });\n\n  constructor(private productsService: ProductsService,\n    private viewRef: ViewContainerRef,\n    private ngxModalDialogService: ModalDialogService,\n    private appModalService: AppModalService) {\n    this.daylyDate = midnightDate();\n    this.toDate = midnightDate();\n    this.fromDate = getDateFirstDayOfMonth(this.daylyDate);\n  }\n\n  ngOnInit() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    this.productsService.getProductsInfo(this.daylyDate, this.fromDate, this.toDate)\n      .subscribe(data => {\n        console.log(data);\n        this.productsInfo = data;\n      }, error => {\n        this.appModalService.openHttpErrorModal(this.ngxModalDialogService, this.viewRef, error);\n      });\n  }\n\n  sortByNameAndWeight(array: ProductInfo[]): ProductInfo[] {\n    return array.sort((a, b) => {\n      const byName = this.COLLATOR.compare(a.type.name, b.type.name);\n      return byName != 0 ? byName : a.type.weight - b.type.weight;\n    });\n  }\n\n  getSectionTotals(values: ProductInfo[]): number[] {\n    return values.reduce((previousValue, currentValue, currentIndex, array) => {\n      previousValue[0] += currentValue.restLeftover.amount;\n      previousValue[1] += currentValue.dayBatch.manufacturedAmount || 0;\n      previousValue[2] += currentValue.monthBatch.manufacturedAmount || 0;\n      previousValue[3] += currentValue.dayBatch.soldAmount || 0;\n      previousValue[4] += currentValue.monthBatch.soldAmount || 0;\n      previousValue[5] += currentValue.currentLeftover.amount;\n      return previousValue;\n    }, new Array(6).fill(0, 0));\n  }\n\n  getTotals(): number[] {\n    return this.productsInfo.reduce((previousValue, currentValue, currentIndex, array) => {\n      const sectionTotals = this.getSectionTotals(currentValue);\n      return previousValue.map((value, index, array) => array[index] += sectionTotals[index]);\n    }, new Array(6).fill(0, 0));\n  }\n\n  openAddProductTypeModal() {\n    const operation = (result: Promise < ProductTypeRequest > ) => {\n      result\n        .then((resolve: ProductTypeRequest) => {\n          this.productsService.postProductType(resolve)\n            .subscribe(data => this.fetchData(), error => this.appModalService.openHttpErrorModal(this.ngxModalDialogService, this.viewRef, error));\n        }, reject => {});\n    };\n    const modalOptions: Partial < IModalDialogOptions < ProductTypeModalData >> = {\n      title: 'Новая продукция',\n      childComponent: ProductTypeModalComponent,\n      data: {\n        operation: operation.bind(this)\n      }\n    };\n    this.ngxModalDialogService.openDialog(this.viewRef, modalOptions);\n  }\n\n  openEditProductTypeModal(productType: ProductTypeResponse) {\n    const operation = (result: Promise < ProductTypeRequest > ) => {\n      result\n        .then((resolve: ProductTypeRequest) => {\n          this.productsService.putProductType(productType.id, resolve)\n            .subscribe(data => this.fetchData(), error => this.appModalService.openHttpErrorModal(this.ngxModalDialogService, this.viewRef, error));\n        }, reject => {});\n    };\n    const modalOptions: Partial < IModalDialogOptions < ProductTypeModalData >> = {\n      title: 'Редактирование продукции',\n      childComponent: ProductTypeModalComponent,\n      data: {\n        productType: {\n          name: productType.name,\n          weight: productType.weight,\n          colorCode: productType.colorCode\n        },\n        operation: operation.bind(this)\n      }\n    };\n    this.ngxModalDialogService.openDialog(this.viewRef, modalOptions);\n  }\n\n  openAddProductOperation(productTypeId: number, operationType: string) {\n    const func = (result: Promise < ProductOperationRequest > ) => {\n      result\n        .then((resolve: ProductOperationRequest) => {\n          this.productsService.postProductOperation(resolve)\n            .subscribe(data => this.fetchData(), error => this.appModalService.openHttpErrorModal(this.ngxModalDialogService, this.viewRef, error));\n        }, reject => {});\n    }\n    const modalOptions: Partial < IModalDialogOptions < ProductOperationModalData >> = {\n      title: 'Операция над продукцией',\n      childComponent: ProductOperationModalComponent,\n      data: {\n        productOperationRequest: {\n          operationDate: formatDate(this.daylyDate),\n          productTypeId,\n          operationType,\n          amount: undefined\n        },\n        func\n      }\n    };\n    this.ngxModalDialogService.openDialog(this.viewRef, modalOptions);\n  }\n\n  openDeleteProductTypeModal(productType: ProductTypeResponse) {\n    const buttonClass = 'btn btn-outline-dark';\n    const modalOptions: Partial < IModalDialogOptions < any >> = {\n      title: 'Подтвердите удаление продукции',\n      childComponent: SimpleConfirmModalComponent,\n      actionButtons: [{\n          text: 'Отменить',\n          buttonClass,\n          onAction: () => true\n        },\n        {\n          text: 'Удалить',\n          buttonClass,\n          onAction: () => {\n            this.productsService.deleteProductType(productType.id).subscribe(data => this.fetchData(), error => {\n              this.appModalService.openHttpErrorModal(this.ngxModalDialogService, this.viewRef, error)\n            });\n            return true;\n          }\n        }\n      ]\n    };\n    this.ngxModalDialogService.openDialog(this.viewRef, modalOptions);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/app-products/components/products-page/products-page.component.ts","export enum ProductOperationType {\n    MANUFACTURED = 'MANUFACTURED',\n    SOLD = 'SOLD'\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/app-products/enums/product-operation-type.enum.ts","import {\n  NgModule\n} from '@angular/core';\nimport {\n  CommonModule\n} from '@angular/common';\nimport {\n  Routes,\n  RouterModule\n} from '@angular/router';\nimport {\n  ProductsPageComponent\n} from './components/products-page/products-page.component';\n\nconst productsRoutes: Routes = [{\n  path: '',\n  component: ProductsPageComponent\n}];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(productsRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class ProductsRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/app-products/products-routing.module.ts","import {\n  NgModule\n} from '@angular/core';\nimport {\n  CommonModule\n} from '@angular/common';\nimport {\n  FormsModule,\n  ReactiveFormsModule\n} from '@angular/forms';\nimport {\n  ColorPickerModule\n} from 'ngx-color-picker';\nimport {\n  NgSelectModule\n} from '@ng-select/ng-select';\nimport {\n  ContextMenuModule\n} from 'ngx-contextmenu';\nimport {\n  ModalDialogModule\n} from 'ngx-modal-dialog';\n\nimport {\n  AppSharedModule\n} from '../app-shared/app-shared.module';\nimport {\n  ProductsPageComponent\n} from './components/products-page/products-page.component';\nimport {\n  ProductsRoutingModule\n} from './products-routing.module';\nimport {\n  ProductsUrlsService\n} from './services/products-urls.service';\nimport {\n  ProductsService\n} from './services/products.service';\nimport {\n  ProductTypeModalComponent\n} from './components/product-type-modal/product-type-modal.component';\nimport {\n  ProductOperationModalComponent\n} from './components/product-operation-modal/product-operation-modal.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ProductsRoutingModule,\n    ColorPickerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    ContextMenuModule.forRoot({\n      useBootstrap4: true\n    }),\n    ModalDialogModule.forRoot(),\n    AppSharedModule\n  ],\n  declarations: [\n    ProductsPageComponent, ProductTypeModalComponent, ProductOperationModalComponent\n  ],\n  providers: [\n    ProductsUrlsService,\n    ProductsService\n  ],\n  entryComponents: [\n    ProductTypeModalComponent,\n    ProductOperationModalComponent\n  ]\n})\nexport class ProductsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/app-products/products.module.ts","import {\n    Injectable\n  } from '@angular/core';\n  import {\n    RestDetailsService\n  } from '../../../services/rest-details-service';\n  \n  @Injectable()\n  export class ProductsUrlsService {\n    private host = this.restDetails.host;\n  \n    productTypesUrl = `${this.host}/product-types`;\n    productBatchUrl = `${this.host}/product-batches`;\n    productLeftoverUrl = `${this.host}/product-leftovers`;\n    productOperationUrl = `${this.host}/product-operations`;\n    productChecksUrl = `${this.host}/product-checks`;\n  \n    constructor(private restDetails: RestDetailsService) {}\n  }\n  \n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/app-products/services/products-urls.service.ts","import {\n  Injectable\n} from '@angular/core';\nimport {\n  HttpClient,\n  HttpParams\n} from '@angular/common/http';\nimport {\n  Observable\n} from 'rxjs/Observable';\nimport {\n  from\n} from 'rxjs/observable/from';\nimport { of\n} from 'rxjs/observable/of';\n\nimport {\n  ProductsUrlsService\n} from './products-urls.service';\nimport {\n  httpErrorHandle\n} from '../../../app-utils/app-http-error-handler';\nimport {\n  formatDate\n} from '../../../app-utils/app-date-utils';\n\n@Injectable()\nexport class ProductsService {\n\n  constructor(private urls: ProductsUrlsService, private http: HttpClient) {}\n\n  getProductsInfo(daylyDate: Date, fromDate: Date, toDate: Date): Observable < ProductInfo[][] > {\n    return this.getProductsLeftovers(fromDate)\n      .map(restOvers => new Map(restOvers.map(x => [x.productTypeId, x] as[number, ProductLeftoverResponse])))\n      .flatMap(restOversMap => this.getDaylyBatches(daylyDate)\n        .map(dayBatches => new Map(dayBatches.map(x => [x.productTypeId, x] as[number, ProductBatchResponse])))\n        .flatMap(dayBatchesMap => this.getMonthlyBatches(fromDate, toDate)\n          .map(monthBatches => new Map(monthBatches.map(x => [x.productTypeId, x] as[number, ProductBatchResponse])))\n          .flatMap(monthBatchesMap => this.getProductsLeftovers(toDate)\n            .map(currentOvers => new Map(currentOvers.map(x => [x.productTypeId, x] as[number, ProductLeftoverResponse])))\n            .flatMap(currentOversMap => this.getProductsChecks()\n              .map(checks => new Map(checks.map(x => [x.productTypeId, x] as[number, ProductCheckResponse])))\n              .flatMap(checksMap => this.getProductTypes()\n                .flatMap(types => from(types)\n                  .map(type => {\n                    const info: ProductInfo = {\n                      type,\n                      restLeftover: restOversMap.get(type.id) || < ProductLeftoverResponse > {},\n                      dayBatch: dayBatchesMap.get(type.id) || < ProductBatchResponse > {},\n                      monthBatch: monthBatchesMap.get(type.id) || < ProductBatchResponse > {},\n                      currentLeftover: currentOversMap.get(type.id) || < ProductLeftoverResponse > {},\n                      productCheck: checksMap.get(type.id) || < ProductCheckResponse > {}\n                    }\n                    return info;\n                  })\n                ).reduce((acc, value, index) => {\n                  if (acc.has(value.type.colorCode.toLowerCase())) acc.get(value.type.colorCode.toLocaleLowerCase()).push(value);\n                  else acc.set(value.type.colorCode.toLocaleLowerCase(), [value]);\n                  return acc;\n                }, new Map < string, ProductInfo[] > ())\n                .flatMap(infoMap => Array.from(infoMap.values())))\n            )\n          )\n        )\n      ).toArray();\n  }\n\n  getProductTypes(): Observable < ProductTypeResponse[] > {\n    return this.http.get(this.urls.productTypesUrl).catch(httpErrorHandle);\n  }\n\n  getProductsLeftovers(date: Date): Observable < ProductLeftoverResponse[] > {\n    const params = new HttpParams()\n      .set('date', formatDate(date));\n    return this.http.get(this.urls.productLeftoverUrl, {\n      params\n    }).catch(httpErrorHandle);\n  }\n\n  getProductLeftover(productTypeId: number, date: Date): Observable < ProductLeftoverResponse > {\n    const params = new HttpParams()\n      .set('product-type-id', String(productTypeId))\n      .set('date', formatDate(date));\n    return this.http.get(this.urls.productLeftoverUrl, {\n      params\n    }).catch(httpErrorHandle);\n  }\n\n  getDaylyBatches(date: Date): Observable < ProductBatchResponse[] > {\n    const params = new HttpParams()\n      .set('date', formatDate(date));\n    return this.http.get(this.urls.productBatchUrl, {\n      params\n    }).catch(httpErrorHandle);\n  }\n\n  getDaylyBatch(productTypeId: number, date: Date): Observable < ProductBatchResponse > {\n    const params = new HttpParams()\n      .set('product-type-id', String(productTypeId))\n      .set('date', formatDate(date));\n    return this.http.get(this.urls.productBatchUrl, {\n      params\n    }).catch(httpErrorHandle);\n  }\n\n  getMonthlyBatches(fromDate: Date, toDate: Date): Observable < ProductBatchResponse[] > {\n    const params = new HttpParams()\n      .set('from', formatDate(fromDate))\n      .set('to', formatDate(toDate));\n    return this.http.get(this.urls.productBatchUrl, {\n      params\n    }).catch(httpErrorHandle);\n  }\n\n  getMonthlyBatch(productTypeId: number, fromDate: Date, toDate: Date): Observable < ProductBatchResponse > {\n    const params = new HttpParams()\n      .set('product-type-id', String(productTypeId))\n      .set('from', formatDate(fromDate))\n      .set('to', formatDate(toDate));\n    return this.http.get(this.urls.productBatchUrl, {\n      params\n    }).catch(httpErrorHandle);\n  }\n\n  getProductsChecks(): Observable < ProductCheckResponse[] > {\n    return this.http.get(this.urls.productChecksUrl).catch(httpErrorHandle);\n  }\n\n  getProductCheck(productTypeId: number): Observable < ProductCheckResponse > {\n    const params = new HttpParams()\n      .set('product_type_id', String(productTypeId));\n    return this.http.get(this.urls.productChecksUrl, {\n      params\n    }).catch(httpErrorHandle);\n  }\n\n  postProductType(type: ProductTypeRequest): Observable < ProductTypeResponse > {\n    return this.http.post(this.urls.productTypesUrl, type).catch(httpErrorHandle);\n  }\n\n  postProductOperation(operation: ProductOperationRequest): Observable < ProductOperationResponse > {\n    return this.http.post(this.urls.productOperationUrl, operation).catch(httpErrorHandle);\n  }\n\n  putProductType(id: number, type: ProductTypeRequest): Observable < ProductTypeResponse > {\n    const url = `${this.urls.productTypesUrl}/${id}`;\n    return this.http.put(url, type).catch(httpErrorHandle);\n  }\n\n  putProductCheck(id: number, check: ProductCheckRequest) {\n    const url = `${this.urls.productChecksUrl}/${id}`;\n    return this.http.put(url, check).catch(httpErrorHandle);\n  }\n\n  deleteProductType(id: number) {\n    const url = `${this.urls.productTypesUrl}/${id}`;\n    return this.http.delete(url).catch(httpErrorHandle);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/app-products/services/products.service.ts"],"sourceRoot":"webpack:///"}